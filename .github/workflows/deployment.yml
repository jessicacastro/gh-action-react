name: Deploy to Vercel
on:
  push:
    branches:
      - main
      - "dev-*" # dev-new-feature dev-this-new
      - "feat/**" # feat/new feat/new/button
      - developmentc
    paths-ignore:
      - "vite.config.js"
  workflow_dispatch:
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code from repository
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Verify code quality
        run: npm run lint
  tests:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Get code from repository
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm run test
  build:
    needs: tests
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.publish.outputs.files }}
    steps:
      - name: Get code from repository
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Build project
        run: npm run build
      - name: Publish JS filename
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'files={}' >> $GITHUB_OUTPUT ';'
        # run: find dist/assets/*.js -type f -execdir echo '::set-output name=files::{}' ';' #another syntax (old)
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
          # path: |
          #   dist
          #   package.json
          #   .eslintrc.json
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: dist
      - name: Output files
        run: ls -la dist
      - name: Deploy
        run: echo "Deployed to Vercel!"
  # sonarqube:
  #   needs: tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Get code from repository
  #       uses: actions/checkout@v3
  #     - name: Install NodeJS
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 14
  #     - name: Install dependencies
  #       run: npm ci
  #     - name: Run SonarQube
  #       run: npm run sonarqube
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
